#include	"xbase/xbase.h"
	.section	.bss

; OPM register cache.
; $100 entries exist, mapping to the address space of the OPM.
; The lower byte contains the data.
; The upper byte is a "dirty" marker, indicating that this data should be
; transmitted upon a call to xb_opm_commit(), when bit 15 is set.
g_xb_opm_reg_cache:	ds.w	$100
	.global		g_xb_opm_reg_cache

	.section	.text
	.global		xb_opm_commit

; void xb_opm_commit(void)
xb_opm_commit:
	lea	g_xb_opm_reg_cache, a0
	lea	XB_OPM_BASE, a1
	moveq	#0, d0       ; register number
	move.w	#$100-1, d1  ; count

commit_top:
	tst.w	(a0)
	bpl.s	commit_next

	; Place OPM address in upper word, data in lower
0:
	tst.b	3(a1)
	bmi	0b
	move.b	d0, 1(a1)

1:
	tst.b	3(a1)
	bmi	1b
	move.b	1(a0), 3(a1)

	clr.w	(a0)

commit_next:
	addq	#1, d0
	addq	#2, a0
	dbf	d1, commit_top

	rts
